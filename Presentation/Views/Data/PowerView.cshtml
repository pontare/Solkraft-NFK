@using Data
@using System.Resources
@using System.Globalization
@using System.Drawing;
@using System.Collections
@using Resources;

@model List<ProducedPower>

@helper DisplayActive()
    {
        if ((string)Session["ChosenACtion"] == "ShowTotalPower")
        {
            <li class="active"><a href="/Data/ShowTotalPower"> Visa totalt </a></li>
        }
        else if ((string)Session["ChosenACtion"] != "ShowTotalPower")
        {
            <li><a href="/Data/ShowTotalPower"> Visa totalt </a></li>
        }
        if ((string)Session["ChosenACtion"] == "ShowPowerOfPastWeek")
        {
            <li class="active"><a href="/Data/ShowPowerOfPastWeek"> Visa senaste veckan </a></li>
        }
        else if ((string)Session["ChosenACtion"] != "ShowPowerOfPastWeek")
        {
            <li><a href="/Data/ShowPowerOfPastWeek"> Visa senaste veckan </a></li>
        }
        if ((string)Session["ChosenACtion"] == "ShowPowerOfDay")
        {
            <li class="active"><a href="/Data/ShowPowerOfDay"> Visa senaste dagen </a></li>
        }
        else if ((string)Session["ChosenACtion"] != "ShowPowerOfDay")
        {
            <li><a href="/Data/ShowPowerOfDay"> Visa senaste dagen </a></li>
        }
}

@helper DisplayEnergy()
    {
        double totalenergi = 0;
        foreach (var elem in Model)
        {
            totalenergi += elem.Energi;
        }
        if ((string)Session["chosenACtion"] == "ShowTotalPower")
        {
            <h2>Energi genererad totalt:</h2>
        }
        else if ((string)Session["chosenACtion"] == "ShowPowerOfPastWeek")
        {
            <h2>Energi genererad senaste veckan:</h2>
        }
        else if ((string)Session["chosenACtion"] == "ShowPowerOfDay")
        {
            <h2>Energi genererad senaste dagen:</h2>
        }
        else if ((string)Session["chosenACtion"] == "Recalculate")
        {
            <h2>Total energi:</h2>
        }
        if (totalenergi > 1000000000)
        {
            <h2> @Math.Round(totalenergi / 1000000000, 2) GWh </h2>
        }
        else if (totalenergi > 1000000)
        {
            <h2> @Math.Round(totalenergi / 1000000, 2) MWh </h2>
        }
        else if (totalenergi > 1000)
        {
            <h2> @Math.Round(totalenergi / 1000, 1) kWh </h2>
        }
        else if (totalenergi > 1000)
        {
            < h2 > @Math.Round(totalenergi) Wh </ h2 >
        }
}

@helper DisplayMap()
    {
        ResourceSet resourceSet = Resources.ResourceManager.GetResourceSet(CultureInfo.CurrentCulture, true, true);
        foreach (DictionaryEntry elem in resourceSet)
        {
            var kommun = Session["kommun"];
            if ((string)elem.Key == (string)Session["kommun"] || (Session["kommun"] == null && (string)elem.Key == "alla_kommuner"))
            {
                ImageConverter converter = new ImageConverter();
                byte[] imagebytes = (byte[])converter.ConvertTo(elem.Value, typeof(byte[]));
                <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(imagebytes))" class="img-responsive img-rounded" />
            }
        }

}

@helper GenerateDropdownContents()
{
    List<string> Kommuner = new List<string>() { "Aneby", "Tranås", "Nässjö", "Eksjö", "Vetlanda", "Sävsjö", "Värnamo", "Gislaved", "Vaggeryd", "Jönköping", "Habo", "Mullsjö", "Hela Länet" };
    foreach (var elem in Kommuner)
    {
        if (elem == "Hela Länet")
        {
            <li> <a href="/Data/ChooseMunicipality/"> @elem </a>  </li>
        }
        else
        {
            <li> <a href="/Data/ChooseMunicipality/@elem"> @elem </a>  </li>
        }
    }
}

@helper DisplayComparison()
{
    
}

<!--------HTML CODE BEGINS HERE---------->

<div class="row container">
    <div class=" col-sm-5">
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" style=" background-color:rgb(0, 153, 51)">
                Välj Kommun
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                @GenerateDropdownContents()
            </ul>
        </div>
        @DisplayMap()
    </div>
    <div class=" col-sm-7">
        <ul class="nav nav-tabs">
            @DisplayActive()
        </ul>
        @if ((bool?)Session["compare"] == true)
        {
            @DisplayComparison();
        }
        else
        {
            @if (Session["kommun"] == null)
            {
                <h3>Jönköpings Län</h3>
            }
            else
            {
                <h3>@((string)Session["kommun"])</h3>
            }
            @DisplayEnergy()
        }
        <br />
        <button data-toggle="collapse" data-target="#info">Hur det fungerar</button>
        <div id="info" class="collapse">
            Effekten är estemerad genom att...
        </div>
    </div>
</div>
